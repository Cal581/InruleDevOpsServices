{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "defaultValue": "DevOpsCatalogPoller",
            "metadata": {
                "description": "The name of the Azure function app that you wish to create."
            }
        },
        "hostingPlanName": {
            "type": "string",
            "defaultValue": "[concat(parameters('appName'),'Plan')]",
            "metadata": {
                "description": "Name for the App Service Plan."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "repoURL": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/InRule/DevOpsServices/main/releases/InRule.DevOps.CatalogPoller.zip",
            "metadata": {
                "description": "The URL for the GitHub repository that contains the project to deploy."
            }
        }
    },
    "variables": {
        "functionAppName": "[parameters('appName')]",
        "hostingPlanName": "[parameters('hostingPlanName')]",
        "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'functions')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "B1"
            }
        },
        {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.Web/sites",
            "name": "[variables('functionAppName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "0"
                        },
                        {
                            "name": "AesEncryptDecryptKey",
                            "value": "b14ca5898a4e4133bbce2ea2315a1916"
                        },
                        {
                            "name": "ApiKeyAuthentication.ApiKey",
                            "value": "89864797-265F-4697-AC92-4E2A3F9771F0"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]"
                        },
                        {
                            "name": "CatalogUsername",
                            "value": "devopsservices"
                        },
                        {
                            "name": "CatalogPassword",
                            "value": "password"
                        },
                        {
                            "name": "CatalogUri",
                            "value": "https://inrule-catalog.staging.inrulecloud.com/service.svc"
                        },
                        {
                            "name": "CatalogManagerUri",
                            "value": "https://inrule-catalogmgr.staging.inrulecloud.com/"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "InRuleDevOpsServiceUri",
                            "value": "https://devops-services.azurewebsites.net/Service.svc/api"
                        },
                        {
                            "name": "LookBackPeriodInMinutes",
                            "value": "5"
                        },
                        {
                            "name": "ScheduleAppSetting",
                            "value": "0 */5 * * * *"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[concat(variables('functionAppName'), '/MSDeploy')]",
            "type": "Microsoft.Web/sites/extensions",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "packageUri": "[parameters('repoURL')]"
            }
        }
    ]
}
